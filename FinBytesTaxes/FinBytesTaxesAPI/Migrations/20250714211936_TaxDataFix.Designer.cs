// <auto-generated />
using System;
using FinBytesTaxesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinBytesTaxesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250714211936_TaxDataFix")]
    partial class TaxDataFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("taxes")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinBytesTaxesAPI.Models.Db.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities", "taxes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vilnius"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kaunas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Panevežys"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Klaipėda"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Molėtai"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Varėna"
                        });
                });

            modelBuilder.Entity("FinBytesTaxesAPI.Models.Db.CityTaxRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TaxTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("TaxTypeId");

                    b.HasIndex("StartDate", "EndDate");

                    b.ToTable("CityTaxRules", "taxes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 12, 31),
                            Rate = 3.3m,
                            StartDate = new DateOnly(2025, 1, 1),
                            TaxTypeId = 4
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 6, 30),
                            Rate = 5m,
                            StartDate = new DateOnly(2025, 6, 1),
                            TaxTypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 7, 31),
                            Rate = 4m,
                            StartDate = new DateOnly(2025, 7, 1),
                            TaxTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 8, 31),
                            Rate = 6m,
                            StartDate = new DateOnly(2025, 8, 1),
                            TaxTypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 2, 15),
                            Rate = 2.5m,
                            StartDate = new DateOnly(2025, 2, 9),
                            TaxTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 3, 8),
                            Rate = 2.5m,
                            StartDate = new DateOnly(2025, 3, 2),
                            TaxTypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 6, 1),
                            Rate = 1.5m,
                            StartDate = new DateOnly(2025, 6, 1),
                            TaxTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            CityId = 2,
                            EndDate = new DateOnly(2025, 10, 23),
                            Rate = 1.2m,
                            StartDate = new DateOnly(2025, 10, 23),
                            TaxTypeId = 1
                        });
                });

            modelBuilder.Entity("FinBytesTaxesAPI.Models.Db.TaxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Priority");

                    b.ToTable("TaxTypes", "taxes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Daily",
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Weekly",
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Monthly",
                            Priority = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yearly",
                            Priority = 4
                        });
                });

            modelBuilder.Entity("FinBytesTaxesAPI.Models.Db.CityTaxRule", b =>
                {
                    b.HasOne("FinBytesTaxesAPI.Models.Db.City", "City")
                        .WithMany("TaxRules")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinBytesTaxesAPI.Models.Db.TaxType", "TaxType")
                        .WithMany()
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("TaxType");
                });

            modelBuilder.Entity("FinBytesTaxesAPI.Models.Db.City", b =>
                {
                    b.Navigation("TaxRules");
                });
#pragma warning restore 612, 618
        }
    }
}
